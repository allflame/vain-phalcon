parameters:
  http.views.dir: '../www/views'
  dispatcher.separator: '/'
  api.validator.module.factory.query.name: ['dispatcher', 'url']
  beanstalk.config.required.fields: ['host', 'port']

services:
  api.config.provider:
    class: Vain\Phalcon\Api\Config\Provider\PhalconApiConfigProvider
    arguments: ['@app.router', '@config.provider', '@api.config.factory']
  api.config.storage:
    alias: api.config.provider
  app.di:
    class: Vain\Phalcon\Di\Symfony\SymfonyContainerAdapter
    arguments: ['@service_container']
  app.bootstrapper.factory:
    class: Vain\Phalcon\Bootstrapper\Factory\MvcBootstrapperFactory
    arguments: ['@config.router', '@config.event', '@event.handler.lazy', '@event.manager']
  app.router:
    class: Phalcon\Mvc\Router
    arguments: [false]
  router:
    alias: app.router
  app.dispatcher:
    class: Vain\Phalcon\Dispatcher\Mvc\MvcDispatcher
    arguments: ['%dispatcher.separator%']
    calls:
      - [setEventsManager, ['@event.manager']]
      - [setParams, [[]]]
  dispatcher:
    alias: app.dispatcher
  app.model.manager:
    class: Vain\Phalcon\Mvc\Model\PhalconModelManager
    calls:
      - [setEventsManager, ['@event.manager']]
      - [setDI, ['@app.di']]
  modelsManager:
    alias: app.model.manager
  app.modelsMetadata:
    class: Phalcon\Mvc\Model\MetaData\Memory
  modelsMetadata:
    alias: app.modelsMetadata
  app.mvc:
    class: Vain\Phalcon\Application\Mvc\MvcApplication
    arguments: ['@http.request.proxy', '@http.response.proxy', '@http.response.factory', '@app.di']
  app.phalcon:
    class: Phalcon\Mvc\Application
    arguments: ['@app.di']
  app.escaper:
    class: Phalcon\Escaper
  escaper:
    alias: app.escaper
  app.security:
    class: Phalcon\Security
  security:
    alias: app.security
  app.crypt:
    class: Phalcon\Crypt
  crypt:
    alias: app.crypt
  app.annotations:
    class: Phalcon\Annotations\Adapter\Memory
  annotaions:
    alias: app.annotations
  app.tag:
    class: Phalcon\Tag
  tag:
    alias: app.tag
  app.session:
    class: Phalcon\Session\Adapter\Files
  session:
    alias: app.session
  app.session.bag:
    class: Phalcon\Session\Bag
  sessionBag:
    alias: app.session.bag
  app.transaction.manager:
    class: Phalcon\Mvc\Model\Transaction\Manager
    arguments: ['@app.di']
  transactionManager:
    alias: app.transaction.manager
  app.assets:
    class: Phalcon\Assets\Manager
  assets:
    alias: app.assets
  config.factory:
    class: Vain\Phalcon\Config\Factory\PhalconConfigFactory
  config.router:
    class: Config
    factory: ['@config.provider', getConfig]
    arguments:
      - 'router'
  event.dispatcher.phalcon:
    class: Vain\Phalcon\Event\Dispatcher\PhalconEventDispatcher
    arguments: ['@event.resolver.phalcon']
  event.dispatcher:
    alias: event.dispatcher.phalcon
  eventManager:
    alias: event.dispatcher
  event.manager:
    alias: event.dispatcher
  event.resolver.phalcon:
    class: Vain\Phalcon\Event\Resolver\PhalconResolver
  event.resolver:
    alias: event.resolver.phalcon
  http.filter:
    class: Phalcon\Filter
  filter:
    alias: http.filter
  http.header.factory:
    class: Vain\Phalcon\Http\Header\Factory\PhalconHeaderFactory
  http.header.provider:
    alias: http.header.provider.server
  http.cookie.factory:
    class: Vain\Phalcon\Http\Cookie\Factory\PhalconCookieFactory
  http.factory:
    class: Vain\Phalcon\Http\Factory\PhalconHttpFactory
    arguments: ['@http.filter', '@http.header.provider','@http.cookie.factory' ,'@http.header.factory']
  http.response.proxy:
    class: Vain\Phalcon\Http\Response\Proxy\PhalconResponseProxy
  response:
    alias: http.response.proxy
  http.response.factory:
    alias: http.factory
  http.request.proxy:
    class: Vain\Phalcon\Http\Request\Proxy\PhalconRequestProxy
  request:
    alias: http.request.proxy
  http.request.factory:
    alias: http.factory
  http.view:
    class: Phalcon\Mvc\View
    calls:
      - [setViewsDir, ['%http.views.dir%']]
      - [registerEngines, [{'.phtml':'http.engine.php','.php':'http.engine.php','.volt':'http.engine.volt'}]]
  view:
    alias: http.view
  http.engine.php:
    class: Phalcon\Mvc\View\Engine\Php
    arguments: ['@http.view', '@app.di']
  http.engine.volt:
    class: Phalcon\Mvc\View\Engine\Volt
    arguments: ['@http.view', '@app.di']
  http.url:
    class: Phalcon\Mvc\Url
  url:
    alias: http.url
  http.cookie.storage:
    class: Vain\Phalcon\Http\Cookie\Storage\PhalconCookieStorage
    arguments: ['@http.cookie.factory']
  cookies:
    class: Phalcon\Http\Response\Cookies
  http.flash:
    class: Phalcon\Flash\Direct
  flash:
    alias: http.flash
  http.flash.session:
    class: Phalcon\Flash\Session
  flashSession:
    alias: http.flash.session
  entity.operation.factory:
    class: Vain\Phalcon\Entity\Operation\Factory\PhalconEntityOperationFactory
  database.factory.phalcon:
    class: Vain\Phalcon\Database\Factory\PhalconDatabaseFactory
    arguments: ['phalcon', '@database.generator.factory']
    tags:
      - {name: database.factory}
  api.validator.module.factory.query:
    class: Vain\Phalcon\Api\Request\Validator\Module\Source\Dispatcher\Factory\ApiValidatorDispatcherModuleFactory
    arguments: ['@app.dispatcher', '%api.validator.module.factory.query.name%']
    tags:
        - {name: validator.factory}
  http.request:
    alias: http.request.proxy
  http.response:
    alias: http.response.proxy
  http.context.phalcon:
    class: Vain\Phalcon\Http\Context\PhalconHttpContext
    parent: http.context.abstract
  http.context:
    alias: http.context.phalcon
  connection.factory.beanstalk.trust:
    class: Vain\Phalcon\Queue\Beanstalk\Factory\BeanstalkConnectionFactory
    arguments: ['beanstalk']
  connection.factory.beanstalk.assert:
    class: Vain\Connection\Factory\Decorator\Assert\ConnectionFactoryAssertDecorator
    arguments: ['@connection.factory.beanstalk.trust', '%beanstalk.config.required.fields%']
  connection.factory.beanstalk:
    alias: connection.factory.beanstalk.assert
    tags:
      - {name: connection.factory}
  queue.factory.amqp:
    class: Vain\Phalcon\Queue\Beanstalk\Factory\BeanstalkQueueFactory
    arguments: ['beanstalk']
    tags:
      - {name: queue.factory}